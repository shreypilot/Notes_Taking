{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Notes_cuvette/src/Components/LeftSidePannel/LeftSidePannel.jsx\",\n  _s = $RefreshSig$();\nimport NotesGroup from \"../NotesGroup/NotesGroup\";\nimport StylesLeftSidePannel from \"./LeftSidePannel.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftSidePannel = ({\n  handleClick,\n  handleUserIdClicked,\n  id,\n  groupName,\n  color,\n  create\n}) => {\n  _s();\n  const [clickedButton, setClickedButton] = useState(null);\n\n  // Getting stored data\n  const storedDataString = localStorage.getItem(\"groupNamesData\");\n  const storedData = JSON.parse(storedDataString) || [];\n  // changing id\n  const newId = storedData.length > 0 ? storedData[storedData.length - 1].id + 1 : 1;\n\n  // Create a new data object\n  const newData = {\n    id: newId,\n    groupName: groupName,\n    color: color,\n    create: create\n  };\n\n  // Append the new data to the existing array\n\n  const submitCheck = () => {\n    if (groupName !== \"\" && create === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  useEffect(() => {\n    if (submitCheck()) {\n      storedData.push(newData);\n      localStorage.setItem(\"groupNamesData\", JSON.stringify(storedData));\n    }\n  }, [groupName, create, newData]);\n  const handleButtonClick = buttonId => {\n    setClickedButton(buttonId);\n  };\n  const buttonStyle = buttonId => {\n    return {\n      backgroundColor: clickedButton === buttonId ? \"#001F8B\" : \"transparent\",\n      color: \"white\",\n      minWidth: \"100%\",\n      minHeight: \"61px\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      borderRadius: \"2rem 0rem 0rem 2rem\",\n      p\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: StylesLeftSidePannel.leftSidePannel,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pocket Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: StylesLeftSidePannel.center,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column-reverse\"\n          },\n          children: storedData.map(group => group.create ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: StylesLeftSidePannel.notesGroupSlected,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: StylesLeftSidePannel.act,\n              style: buttonStyle(group.id),\n              onClick: _ => {\n                handleUserIdClicked(group.id);\n                handleButtonClick(group.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(NotesGroup, {\n                groupName: group.groupName,\n                color: group.color,\n                buttonColorId: group.id\n              }, group.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: StylesLeftSidePannel.createNotesGroup,\n        onClick: () => handleClick(true),\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/+.svg\",\n          alt: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSidePannel, \"GqVq83JpH3XMeV4yQ4eK5mfJH7M=\");\n_c = LeftSidePannel;\nexport default LeftSidePannel;\nvar _c;\n$RefreshReg$(_c, \"LeftSidePannel\");","map":{"version":3,"names":["NotesGroup","StylesLeftSidePannel","React","useState","useEffect","jsxDEV","_jsxDEV","LeftSidePannel","handleClick","handleUserIdClicked","id","groupName","color","create","_s","clickedButton","setClickedButton","storedDataString","localStorage","getItem","storedData","JSON","parse","newId","length","newData","submitCheck","push","setItem","stringify","handleButtonClick","buttonId","buttonStyle","backgroundColor","minWidth","minHeight","display","justifyContent","borderRadius","p","className","leftSidePannel","children","fileName","_jsxFileName","lineNumber","columnNumber","center","style","flexDirection","map","group","notesGroupSlected","act","onClick","_","buttonColorId","createNotesGroup","src","alt","_c","$RefreshReg$"],"sources":["/home/shreya/Notes_cuvette/src/Components/LeftSidePannel/LeftSidePannel.jsx"],"sourcesContent":["import NotesGroup from \"../NotesGroup/NotesGroup\";\nimport StylesLeftSidePannel from \"./LeftSidePannel.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst LeftSidePannel = ({ handleClick,handleUserIdClicked, id, groupName, color, create }) => {\n  const [clickedButton, setClickedButton] = useState(null);\n  \n\n  // Getting stored data\n  const storedDataString = localStorage.getItem(\"groupNamesData\");\n  const storedData = JSON.parse(storedDataString) || [];\n  // changing id\n  const newId =\n    storedData.length > 0 ? storedData[storedData.length - 1].id + 1 : 1;\n\n  // Create a new data object\n  const newData = {\n    id: newId,\n    groupName: groupName,\n    color: color,\n    create: create,\n  };\n  \n  // Append the new data to the existing array\n\n  const submitCheck = () => {\n    if (groupName !== \"\" && create === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (submitCheck()) {\n      storedData.push(newData);\n      localStorage.setItem(\"groupNamesData\", JSON.stringify(storedData));\n    }\n  }, [groupName, create, newData]);\n\n\n  const handleButtonClick = (buttonId) => {\n    setClickedButton(buttonId);\n  };\n\n  const buttonStyle = (buttonId) => {\n    return {\n      backgroundColor: clickedButton === buttonId ? \"#001F8B\" : \"transparent\",\n      color: \"white\",\n      minWidth: \"100%\",\n      minHeight: \"61px\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      borderRadius: \"2rem 0rem 0rem 2rem\",\n      p\n    \n    };\n  };\n\n  return (\n    <div className={StylesLeftSidePannel.leftSidePannel}>\n      <h1>Pocket Notes</h1>\n      <div className={StylesLeftSidePannel.center}>\n      \n        <div>\n          <br />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column-reverse\",\n            }}\n          >\n            {storedData.map((group) =>\n              group.create ? (\n                <div className={StylesLeftSidePannel.notesGroupSlected}>\n                  \n                  <span\n                    className={StylesLeftSidePannel.act}\n                    style={buttonStyle(group.id)}\n                    onClick={(_) => {\n                      handleUserIdClicked(group.id);\n                      handleButtonClick(group.id);\n                    }}\n                  >\n                    <NotesGroup\n                      key={group.id}\n                      groupName={group.groupName}\n                      color={group.color}\n                      buttonColorId={group.id}\n                    />\n                  </span>\n                </div>\n              ) : null\n            )}\n          </div>\n        </div>\n        <button\n          className={StylesLeftSidePannel.createNotesGroup}\n          onClick={() => handleClick(true)}\n        >\n          {\" \"}\n          <img src=\"assets/+.svg\" alt=\"+\"  /> \n            \n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftSidePannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}